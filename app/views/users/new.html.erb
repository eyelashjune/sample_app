<% provide(:title, 'Sign up') %>
<h1>Sign up</h1>

<div class="row">
	<div class="span6 offset3">
		<%= #what we do need to know is what the f object does: when called with a method corresponding to an HTML form element—such as a text field, radio button, or password field—it returns code for that element specifically designed to set an attribute of the @user object.
			form_for(@user) do |f| %>

			<%= #Notice here that we render a partial called ’shared/error_messages’; this reflects the common Rails convention of using a dedicated shared/ directory for partials expected to be used in views across multiple controllers. (We’ll see this expectation fulfilled in Section 9.1.1.) This means that we have to create both the new app/views/shared directory and the _error_messages.html.erb partial file. The partial itself appears in Listing 7.24.
			render 'shared/error_messages' %>

			<%= f.label :name %>
			<%= f.text_field :name %>

			<%= f.label :email %>
			<%= f.text_field :email %>

			<%= f.label :password %>
			<%= f.password_field :password %>

			<%= f.label :password_confirmation, "Confirmation" %>
			<%= f.password_field :password_confirmation %>

			<%= f.submit "Create my account", class: "btn btn-large btn-primary" %>
		<% end %>
		<% #In the produced HTML codes, there is a some HTML related to the authenticity token, which Rails automatically includes to thwart a particular kind of attack called a cross-site request forgery (CSRF). See the Stack Overflow entry on the Rails authenticity token if you’re interested in the details of how this works and why it’s important. http://stackoverflow.com/questions/941594/understand-rails-authenticity-token %>
	</div>
</div>